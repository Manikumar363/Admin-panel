{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alles\\\\Downloads\\\\Developement\\\\Admin-Panel\\\\frontend\\\\src\\\\components\\\\RegisterForm.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, Button, TextField, Typography, Container, Alert, InputAdornment, Link } from '@mui/material';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\nimport CalendarTodayOutlinedIcon from '@mui/icons-material/CalendarTodayOutlined';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Name is required').min(2, 'Name should be of minimum 2 characters length'),\n  email: Yup.string().email('Enter a valid email').required('Email is required'),\n  dob: Yup.date().required('Date of birth is required').max(new Date(), 'Date of birth cannot be in the future'),\n  password: Yup.string().min(6, 'Password should be of minimum 6 characters length').required('Password is required')\n});\nexport const RegisterForm = () => {\n  _s();\n  const {\n    register,\n    error\n  } = useAuth();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      dob: '',\n      password: ''\n    },\n    validationSchema,\n    onSubmit: async values => {\n      await register(values);\n      navigate('/dashboard');\n    }\n  });\n\n  // Define colors based on the image\n  const primaryDark = '#2c3e50'; // Dark background\n  const accentColor = '#00bcd4'; // Teal/Cyan accent\n  const lightText = '#ecf0f1'; // Very light grey/white for main text\n  const mediumText = '#bdc3c7'; // Medium grey for labels and icons\n  const formBackground = '#3b5066'; // Background color for input fields\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      // Update gradient background to better match image\n      background: 'linear-gradient(to bottom, #00bcd4 0%, #00bcd4 50%, #34495e 50%, #34495e 100%)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: 4,\n          borderRadius: 2,\n          backgroundColor: primaryDark,\n          // Use dark background color\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          boxShadow: '0px 0px 20px rgba(0,0,0,0.5)',\n          overflow: 'hidden',\n          // Hide overflowing elements like the header button corners\n          position: 'relative' // Needed for absolute positioning of header button\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          fullWidth: true,\n          sx: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            height: 50,\n            // Adjust height to match visual\n            // Match the sharp bottom corners and rounded top corners of the header in the image\n            borderBottomLeftRadius: 0,\n            borderBottomRightRadius: 0,\n            borderTopLeftRadius: 8,\n            borderTopRightRadius: 8,\n            backgroundColor: accentColor,\n            '&:hover': {\n              backgroundColor: accentColor,\n              // Keep the same color on hover\n              opacity: 0.9 // Slight opacity change\n            },\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: '1.2rem',\n            padding: '12px 16px',\n            // Adjust padding to match visual weight\n            zIndex: 1 // Ensure button is above other content\n          },\n          onClick: () => navigate('/register'),\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 8,\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 80,\n              height: 80,\n              borderRadius: '50%',\n              backgroundColor: '#556c7b',\n              // A lighter shade for the icon background\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(PersonOutlineOutlinedIcon, {\n              sx: {\n                fontSize: 50,\n                color: lightText\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 12\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            sx: {\n              mt: 2,\n              width: '100%',\n              mb: 2\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: formik.handleSubmit,\n            sx: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              fullWidth: true,\n              id: \"name\",\n              name: \"name\",\n              label: \"Full Name\",\n              autoComplete: \"name\",\n              autoFocus: true,\n              value: formik.values.name,\n              onChange: formik.handleChange,\n              error: formik.touched.name && Boolean(formik.errors.name),\n              helperText: formik.touched.name && formik.errors.name,\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(PersonOutlineOutlinedIcon, {\n                    sx: {\n                      color: mediumText\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this),\n                sx: {\n                  // Attempting to match left-side rounding\n                  borderRadius: '25px',\n                  // Apply full border radius\n                  borderTopRightRadius: 0,\n                  // Sharpen right corners\n                  borderBottomRightRadius: 0,\n                  backgroundColor: formBackground,\n                  // Input field background\n                  color: lightText,\n                  '& fieldset': {\n                    border: 'none'\n                  } // Remove default border\n                }\n              },\n              InputLabelProps: {\n                sx: {\n                  color: mediumText\n                } // Label color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              fullWidth: true,\n              id: \"email\",\n              name: \"email\",\n              label: \"Email Address\",\n              autoComplete: \"email\",\n              value: formik.values.email,\n              onChange: formik.handleChange,\n              error: formik.touched.email && Boolean(formik.errors.email),\n              helperText: formik.touched.email && formik.errors.email,\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(EmailOutlinedIcon, {\n                    sx: {\n                      color: mediumText\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this),\n                sx: {\n                  // Attempting to match left-side rounding\n                  borderRadius: '25px',\n                  // Apply full border radius\n                  borderTopRightRadius: 0,\n                  // Sharpen right corners\n                  borderBottomRightRadius: 0,\n                  backgroundColor: formBackground,\n                  // Input field background\n                  color: lightText,\n                  '& fieldset': {\n                    border: 'none'\n                  } // Remove default border\n                }\n              },\n              InputLabelProps: {\n                sx: {\n                  color: mediumText\n                } // Label color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              fullWidth: true,\n              id: \"dob\",\n              name: \"dob\",\n              label: \"Date of Birth\",\n              type: \"date\",\n              InputLabelProps: {\n                shrink: true,\n                sx: {\n                  color: mediumText\n                } // Label color\n              },\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(CalendarTodayOutlinedIcon, {\n                    sx: {\n                      color: mediumText\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this),\n                sx: {\n                  // Attempting to match left-side rounding\n                  borderRadius: '25px',\n                  // Apply full border radius\n                  borderTopRightRadius: 0,\n                  // Sharpen right corners\n                  borderBottomRightRadius: 0,\n                  backgroundColor: formBackground,\n                  // Input field background\n                  color: lightText,\n                  '& fieldset': {\n                    border: 'none'\n                  } // Remove default border\n                }\n              },\n              value: formik.values.dob,\n              onChange: formik.handleChange,\n              error: formik.touched.dob && Boolean(formik.errors.dob),\n              helperText: formik.touched.dob && formik.errors.dob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"new-password\",\n              value: formik.values.password,\n              onChange: formik.handleChange,\n              error: formik.touched.password && Boolean(formik.errors.password),\n              helperText: formik.touched.password && formik.errors.password,\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {\n                    sx: {\n                      color: mediumText\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this),\n                sx: {\n                  // Attempting to match left-side rounding\n                  borderRadius: '25px',\n                  // Apply full border radius\n                  borderTopRightRadius: 0,\n                  // Sharpen right corners\n                  borderBottomRightRadius: 0,\n                  backgroundColor: formBackground,\n                  // Input field background\n                  color: lightText,\n                  '& fieldset': {\n                    border: 'none'\n                  } // Remove default border\n                }\n              },\n              InputLabelProps: {\n                sx: {\n                  color: mediumText\n                } // Label color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2,\n                backgroundColor: accentColor,\n                // Use accent color for button\n                '&:hover': {\n                  backgroundColor: accentColor,\n                  // Keep the same color on hover\n                  opacity: 0.9 // Slight opacity change\n                },\n                color: 'white',\n                fontWeight: 'bold',\n                fontSize: '1.2rem',\n                borderRadius: '25px' // Rounded corners for the button\n              },\n              disabled: formik.isSubmitting,\n              children: \"SIGN UP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"text\",\n              sx: {\n                color: accentColor,\n                fontWeight: 'bold',\n                fontSize: '0.9rem'\n              },\n              onClick: () => navigate('/login'),\n              children: \"ALREADY HAVE AN ACCOUNT? SIGN IN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 6\n  }, this);\n};\n_s(RegisterForm, \"9KktjntBffP/nUWtjYs02LmTqII=\", false, function () {\n  return [useAuth, useNavigate, useFormik];\n});\n_c = RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useFormik","Yup","Box","Button","TextField","Typography","Container","Alert","InputAdornment","Link","PersonOutlineOutlinedIcon","EmailOutlinedIcon","CalendarTodayOutlinedIcon","LockOutlinedIcon","useAuth","useNavigate","jsxDEV","_jsxDEV","validationSchema","object","name","string","required","min","email","dob","date","max","Date","password","RegisterForm","_s","register","error","navigate","formik","initialValues","onSubmit","values","primaryDark","accentColor","lightText","mediumText","formBackground","sx","height","display","justifyContent","alignItems","background","children","component","maxWidth","padding","borderRadius","backgroundColor","flexDirection","boxShadow","overflow","position","variant","fullWidth","top","left","right","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","opacity","color","fontWeight","fontSize","zIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","mt","width","mb","severity","handleSubmit","margin","id","label","autoComplete","autoFocus","value","onChange","handleChange","touched","Boolean","errors","helperText","InputProps","startAdornment","border","InputLabelProps","type","shrink","disabled","isSubmitting","_c","$RefreshReg$"],"sources":["C:/Users/alles/Downloads/Developement/Admin-Panel/frontend/src/components/RegisterForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Container,\r\n  Alert,\r\n  InputAdornment,\r\n  Link,\r\n} from '@mui/material';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\r\nimport CalendarTodayOutlinedIcon from '@mui/icons-material/CalendarTodayOutlined';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string()\r\n    .required('Name is required')\r\n    .min(2, 'Name should be of minimum 2 characters length'),\r\n  email: Yup.string()\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  dob: Yup.date()\r\n    .required('Date of birth is required')\r\n    .max(new Date(), 'Date of birth cannot be in the future'),\r\n  password: Yup.string()\r\n    .min(6, 'Password should be of minimum 6 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\nexport const RegisterForm = () => {\r\n  const { register, error } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      dob: '',\r\n      password: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      await register(values);\r\n      navigate('/dashboard');\r\n    },\r\n  });\r\n\r\n   // Define colors based on the image\r\n  const primaryDark = '#2c3e50'; // Dark background\r\n  const accentColor = '#00bcd4'; // Teal/Cyan accent\r\n  const lightText = '#ecf0f1'; // Very light grey/white for main text\r\n  const mediumText = '#bdc3c7'; // Medium grey for labels and icons\r\n  const formBackground = '#3b5066'; // Background color for input fields\r\n\r\n  return (\r\n     <Box\r\n      sx={{\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        // Update gradient background to better match image\r\n        background: 'linear-gradient(to bottom, #00bcd4 0%, #00bcd4 50%, #34495e 50%, #34495e 100%)',\r\n      }}\r\n    >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Box\r\n          sx={{\r\n            padding: 4,\r\n            borderRadius: 2,\r\n            backgroundColor: primaryDark, // Use dark background color\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n             boxShadow: '0px 0px 20px rgba(0,0,0,0.5)',\r\n             overflow: 'hidden', // Hide overflowing elements like the header button corners\r\n             position: 'relative' // Needed for absolute positioning of header button\r\n          }}\r\n        >\r\n           {/* \"SIGN UP\" Header/Button - Adjusted positioning and shape */}\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{\r\n               position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              height: 50, // Adjust height to match visual\r\n              // Match the sharp bottom corners and rounded top corners of the header in the image\r\n              borderBottomLeftRadius: 0,\r\n              borderBottomRightRadius: 0,\r\n              borderTopLeftRadius: 8,\r\n              borderTopRightRadius: 8,\r\n              backgroundColor: accentColor,\r\n              '&:hover': {\r\n                backgroundColor: accentColor, // Keep the same color on hover\r\n                opacity: 0.9 // Slight opacity change\r\n              },\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n              fontSize: '1.2rem',\r\n               padding: '12px 16px', // Adjust padding to match visual weight\r\n               zIndex: 1 // Ensure button is above other content\r\n            }}\r\n             onClick={() => navigate('/register')}\r\n          >\r\n            SIGN UP\r\n          </Button>\r\n\r\n           {/* Content container to give space for the absolute positioned header */}\r\n           <Box sx={{ mt: 8, width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n\r\n          {/* User Icon (Placeholder for registration) */}\r\n           <Box\r\n            sx={{\r\n              width: 80,\r\n              height: 80,\r\n              borderRadius: '50%',\r\n              backgroundColor: '#556c7b', // A lighter shade for the icon background\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              mb: 3,\r\n            }}\r\n          >\r\n            <PersonOutlineOutlinedIcon sx={{ fontSize: 50, color: lightText }} /> {/* Light icon color */}\r\n          </Box>\r\n\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mt: 2, width: '100%', mb: 2 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          <Box component=\"form\" onSubmit={formik.handleSubmit} sx={{ width: '100%' }}>\r\n            {/* Name Field */}\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"name\"\r\n              name=\"name\"\r\n              label=\"Full Name\"\r\n              autoComplete=\"name\"\r\n              autoFocus\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n              helperText={formik.touched.name && formik.errors.name}\r\n               InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <PersonOutlineOutlinedIcon sx={{ color: mediumText }} />\r\n                  </InputAdornment>\r\n                ),\r\n                 sx: { \r\n                  // Attempting to match left-side rounding\r\n                  borderRadius: '25px', // Apply full border radius\r\n                  borderTopRightRadius: 0, // Sharpen right corners\r\n                  borderBottomRightRadius: 0,\r\n                  backgroundColor: formBackground, // Input field background\r\n                  color: lightText,\r\n                   '& fieldset': { border: 'none' }, // Remove default border\r\n                },\r\n              }}\r\n               InputLabelProps={{\r\n                sx: { color: mediumText }, // Label color\r\n              }}\r\n            />\r\n            {/* Email Field */}\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              autoComplete=\"email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n               InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <EmailOutlinedIcon sx={{ color: mediumText }} />\r\n                  </InputAdornment>\r\n                ),\r\n                 sx: { \r\n                  // Attempting to match left-side rounding\r\n                  borderRadius: '25px', // Apply full border radius\r\n                  borderTopRightRadius: 0, // Sharpen right corners\r\n                  borderBottomRightRadius: 0,\r\n                  backgroundColor: formBackground, // Input field background\r\n                  color: lightText,\r\n                   '& fieldset': { border: 'none' }, // Remove default border\r\n                },\r\n              }}\r\n               InputLabelProps={{\r\n                sx: { color: mediumText }, // Label color\r\n              }}\r\n            />\r\n            {/* Date of Birth Field */}\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"dob\"\r\n              name=\"dob\"\r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n                 sx: { color: mediumText }, // Label color\r\n              }}\r\n               InputProps={{\r\n                 startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <CalendarTodayOutlinedIcon sx={{ color: mediumText }} />\r\n                  </InputAdornment>\r\n                ),\r\n                sx: { \r\n                  // Attempting to match left-side rounding\r\n                  borderRadius: '25px', // Apply full border radius\r\n                  borderTopRightRadius: 0, // Sharpen right corners\r\n                  borderBottomRightRadius: 0,\r\n                  backgroundColor: formBackground, // Input field background\r\n                  color: lightText,\r\n                   '& fieldset': { border: 'none' }, // Remove default border\r\n                },\r\n              }}\r\n              value={formik.values.dob}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.dob && Boolean(formik.errors.dob)}\r\n              helperText={formik.touched.dob && formik.errors.dob}\r\n            />\r\n            {/* Password Field */}\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"new-password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n               InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockOutlinedIcon sx={{ color: mediumText }} />\r\n                  </InputAdornment>\r\n                ),\r\n                 sx: { \r\n                  // Attempting to match left-side rounding\r\n                  borderRadius: '25px', // Apply full border radius\r\n                  borderTopRightRadius: 0, // Sharpen right corners\r\n                  borderBottomRightRadius: 0,\r\n                  backgroundColor: formBackground, // Input field background\r\n                  color: lightText,\r\n                   '& fieldset': { border: 'none' }, // Remove default border\r\n                },\r\n              }}\r\n               InputLabelProps={{\r\n                sx: { color: mediumText }, // Label color\r\n              }}\r\n            />\r\n\r\n            {/* Sign Up Button */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                backgroundColor: accentColor, // Use accent color for button\r\n                 '&:hover': {\r\n                  backgroundColor: accentColor, // Keep the same color on hover\r\n                   opacity: 0.9 // Slight opacity change\r\n                },\r\n                color: 'white',\r\n                fontWeight: 'bold',\r\n                fontSize: '1.2rem',\r\n                borderRadius: '25px', // Rounded corners for the button\r\n              }}\r\n              disabled={formik.isSubmitting}\r\n            >\r\n              SIGN UP\r\n            </Button>\r\n\r\n            {/* Link to Sign In */}\r\n            <Button\r\n              fullWidth\r\n              variant=\"text\"\r\n              sx={{ color: accentColor, fontWeight: 'bold', fontSize: '0.9rem' }}\r\n              onClick={() => navigate('/login')}\r\n            >\r\n              ALREADY HAVE AN ACCOUNT? SIGN IN\r\n            </Button>\r\n          </Box>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n     </Box>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}